---
apiVersion: v1
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVuekNDQTRlZ0F3SUJBZ0lSQUwvQnYxZStPYzdiY0VkajR3S3lZL2t3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1qQXdNVEF6TWpFd05qTXpXaGNOTWpBd05EQXlNakV3Ck5qTXpXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBT2xKdWp4Y1ZOWlkycDdmcUVjNFhYR3RPdVhTU1VUdHdEN0FPam1CVjJvMWcycDdnT1ZECnkvUmdZZW15K0RIOXJQYmZrU3BwYWFtd2xNdVQrZDBYV2l6Q2ZlZWhDT09RSjZXdFpCenM0bXROWEdyV3M1bVMKVG1jUG5WN21nRHpKd250NENjdXZVWEVqdDduNDhjRjR0U1NZdnR1OGRjcHhFZmxVVXlEanY0VHNjbjl0R3lQMQpEZzB4SWE2U25HZjMwZDY5RWVvdGVCUnZ2bDdBZjJObkYxYndFa2NMT1M1MWFTeW9jdWF0eGxCbWlOeGFQWmZxCkViMWpMVlRyR09rRko4NnVjcEVYK2I1QlllcEVoMVA3WVNFOEN6NEY3TzBueG4rVzNEWkVHSDJBamEzekhEZlMKM2E1S09SYzRubU9kOFNSNW4wc1VzZ21CWTR4TmxjVlE5T01DQXdFQUFhT0NBWXd3Z2dHSU1CTUdBMVVkSlFRTQpNQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdnZ0ZoQmdOVkhSRUVnZ0ZZTUlJQlZJSWhhbVZ2CmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmxabUYxYkhRdWMzWmpnaTlxWlc5d1lYSmtlUzF1YjJSbGMyVnMKWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSXZhbVZ2Y0dGeVpIa3RibTlrWlhObApiR1ZqZEc5eUxtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTV6ZG1PQ0wycGxiM0JoY21SNUxXNXZaR1Z6ClpXeGxZM1J2Y2k1cVpXOXdZWEprZVMxdWIyUmxjMlZzWldOMGIzSXVjM1pqZ2tKcVpXOXdZWEprZVMxdWIyUmwKYzJWc1pXTjBiM0l1YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxYUmxjM1F1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd5Q1FtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTVxWlc5d1lYSmtlUzF1YjJSbGMyVnNaV04wCmIzSXRkR1Z6ZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJSmJHOWpZV3hvYjNOMGdna3hNamN1TUM0d0xqRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQURoY2RJNGltUkRveW5ucnZLWVJnRnRFa01YUzFvUnhRbFhSdE8yOQo3cGFVNXM2OXR1USthZkV5R25JeDE1VmVaOGg0NCtJcFV5NkYrenhIdmQ4QmNMQ0R3T0dzWEZqaEx2VkNsRmlXCnFhQm1razJJc2pMUEtQUU9FYXgwQitMUjNzZ2dCc3BwYVBkSytzWHprVnE4alhWUm0xWGIzT1Y5RGlGb2JmMEcKNE9EZzJwWnpRK0xXRnByTzNUS1ZaRUFldHdhVlZWMUJzT0tpUFBhUjNJU21NM05NbW9DRDNNWDc2VnpBZjN5WQpiTjhaRGhYMGtPZGlHanVud1ZrM1lsR2xtandna3Fwa1JYcEVrQUhwTnlXU2FBbGlZVURtdFlMSlVlQnFxbG9uCmo3UHFoajJRRzYrMk1MaUdNUHZDcGlGSFYzdFlSVGhIN05WYjdVTFNzNzVnZzQ0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVuekNDQTRlZ0F3SUJBZ0lSQUwvQnYxZStPYzdiY0VkajR3S3lZL2t3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1qQXdNVEF6TWpFd05qTXpXaGNOTWpBd05EQXlNakV3Ck5qTXpXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBT2xKdWp4Y1ZOWlkycDdmcUVjNFhYR3RPdVhTU1VUdHdEN0FPam1CVjJvMWcycDdnT1ZECnkvUmdZZW15K0RIOXJQYmZrU3BwYWFtd2xNdVQrZDBYV2l6Q2ZlZWhDT09RSjZXdFpCenM0bXROWEdyV3M1bVMKVG1jUG5WN21nRHpKd250NENjdXZVWEVqdDduNDhjRjR0U1NZdnR1OGRjcHhFZmxVVXlEanY0VHNjbjl0R3lQMQpEZzB4SWE2U25HZjMwZDY5RWVvdGVCUnZ2bDdBZjJObkYxYndFa2NMT1M1MWFTeW9jdWF0eGxCbWlOeGFQWmZxCkViMWpMVlRyR09rRko4NnVjcEVYK2I1QlllcEVoMVA3WVNFOEN6NEY3TzBueG4rVzNEWkVHSDJBamEzekhEZlMKM2E1S09SYzRubU9kOFNSNW4wc1VzZ21CWTR4TmxjVlE5T01DQXdFQUFhT0NBWXd3Z2dHSU1CTUdBMVVkSlFRTQpNQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdnZ0ZoQmdOVkhSRUVnZ0ZZTUlJQlZJSWhhbVZ2CmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmxabUYxYkhRdWMzWmpnaTlxWlc5d1lYSmtlUzF1YjJSbGMyVnMKWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSXZhbVZ2Y0dGeVpIa3RibTlrWlhObApiR1ZqZEc5eUxtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTV6ZG1PQ0wycGxiM0JoY21SNUxXNXZaR1Z6ClpXeGxZM1J2Y2k1cVpXOXdZWEprZVMxdWIyUmxjMlZzWldOMGIzSXVjM1pqZ2tKcVpXOXdZWEprZVMxdWIyUmwKYzJWc1pXTjBiM0l1YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxYUmxjM1F1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd5Q1FtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTVxWlc5d1lYSmtlUzF1YjJSbGMyVnNaV04wCmIzSXRkR1Z6ZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJSmJHOWpZV3hvYjNOMGdna3hNamN1TUM0d0xqRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQURoY2RJNGltUkRveW5ucnZLWVJnRnRFa01YUzFvUnhRbFhSdE8yOQo3cGFVNXM2OXR1USthZkV5R25JeDE1VmVaOGg0NCtJcFV5NkYrenhIdmQ4QmNMQ0R3T0dzWEZqaEx2VkNsRmlXCnFhQm1razJJc2pMUEtQUU9FYXgwQitMUjNzZ2dCc3BwYVBkSytzWHprVnE4alhWUm0xWGIzT1Y5RGlGb2JmMEcKNE9EZzJwWnpRK0xXRnByTzNUS1ZaRUFldHdhVlZWMUJzT0tpUFBhUjNJU21NM05NbW9DRDNNWDc2VnpBZjN5WQpiTjhaRGhYMGtPZGlHanVud1ZrM1lsR2xtandna3Fwa1JYcEVrQUhwTnlXU2FBbGlZVURtdFlMSlVlQnFxbG9uCmo3UHFoajJRRzYrMk1MaUdNUHZDcGlGSFYzdFlSVGhIN05WYjdVTFNzNzVnZzQ0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNlVtNlBGeFUxbGphbnQrb1J6aGRjYTA2NWRKSlJPM0FQc0E2T1lGWGFqV0RhbnVBCjVVUEw5R0JoNmJMNE1mMnM5dCtSS21scHFiQ1V5NVA1M1JkYUxNSjk1NkVJNDVBbnBhMWtIT3ppYTAxY2F0YXoKbVpKT1p3K2RYdWFBUE1uQ2UzZ0p5NjlSY1NPM3Vmanh3WGkxSkppKzI3eDF5bkVSK1ZSVElPTy9oT3h5ZjIwYgpJL1VPRFRFaHJwS2NaL2ZSM3IwUjZpMTRGRysrWHNCL1kyY1hWdkFTUndzNUxuVnBMS2h5NXEzR1VHYUkzRm85Cmwrb1J2V010Vk9zWTZRVW56cTV5a1JmNXZrRmg2a1NIVS90aElUd0xQZ1hzN1NmR2Y1YmNOa1FZZllDTnJmTWMKTjlMZHJrbzVGemllWTUzeEpIbWZTeFN5Q1lGampFMlZ4VkQwNHdJREFRQUJBb0lCQVFDU3lRVVpmYThUdjR5dgpjbUxialNlZW96VHY3a1NUemxTc0p4OTdsMXA5UlhhT3hXN3cwcHUrQS9jWHFMaHFIQWQ4dm1jRW5KY1RZanY5CmEvcEhscTN5ZzkzY3BJS0hUT2psWWhnZjZ4ejhEdzBiWEVSZFdLVmtTM3JsZjNzb3hIcE9YZFVzQi8vaWhHclIKNVVXWVNtOFB1OXc3UG5XUEQxNFQxMjhHdnNaK3gyUW83QkhWeUdoSU4wQWxCUld6eXBoQXpmNkVXQUxIcTVuLwpwRFZnaGJmdktScVRMQS91MjUvTGRzMi9GVmduQXM1Sk1yZFRGU01pblhTNFZLZ21tTlk5UnRqOVB6Z1ZzR3JxCkMxa0M4Mk5RV1JmYm92L3hNMVlVeTk5dFNYUVFoZTVoMFJWWDFjSElpWmtrKy9iZTNGdFlyaGtLODcwcFBMSjkKeGtOWVlyUWhBb0dCQVBLV25MdDc0d2d4WnZoTjlGclhTUnhkVmlNOWdSVi9NVGlpRUxJWjB2dXZwY05mdE5qVgp1T0ZUaHM1dHdsWFRhTWxiZFBrenNNa1B0aGZHMXU2Y1dxaUxrNEJkTGRpMXZXWEdhOEtUc0NIaGh0UGtaQ2VrClVIWnN6SUw1cEJzd0ptWXJiQU15OE9zMUtBeVp3dkpjdTdMaGlQRGRVcDNNUnEvVzFSVlIzZ2xQQW9HQkFQWXYKZkg4aUFuMVplSUp6VlpxSkFkK1RaRTNrcmlENkgrU3pyd0E5VVJ0TTVKVTBCM2F6NW1IUFo5eWJkN0wyamJoRwo5R2x1UU5nV3NKYjR4cldLZCtoaitocHVYbytvUEhhTXdEQ28zODZQVWFMTDYwRE5EZit3Y09BRmQxUjZObUNUCnNMOVJXUldTaEMyS3RxS1pCMkVTQ1NGL0w1RExOZ0tpOXpkSENRNHRBb0dCQUxmbWVYYWZtaUtSNE8rSG1TQnMKYUI0Nm01d25lZjNqNkZwNGNaT3loQUVNek9ycFdOMndWM0Zwc3A0M0VzV2hlS1I4MHBaQUcxcXdzR2doOHJuOAppYldQNmdlN200L1habmNMRHBINUIrTUhad0NtK1U0Y0FHdG1XenRIS0tMN3c0QmNsb3R1U0xqbUdUQkVPRWNuCkNadTM0ZXBHdmVTbUFVZzM0bDFCTE1OOUFvR0FlRXpDSUhubEQ0M2VCcGtIZHNtR2dkTkxpNGk0MG1LSG5VRjAKdmNBNDF3ZGZGODNoNjg2RFFMNlNPVW83VnRlR2IwczAraVFuU2JEa3dCRjNRSlVXZlJnRnlrNnVwTEtJUVVJTQpWSHJoU3RYY0JacHlMaXRGc1BGdVp2b2swc0ladWwzUlc5d0xsVEFRcVJTRXBMWDAxaWx6RHN4UTJRZUVNQXVrCmxIMkEzazBDZ1lFQTI3elJSckFNVkZ6dm0vZHFkYW5scmpPY1NOaTMycFVySHBPZnVrK2NITzgrSHlPaTZBRUoKcWVZb050OUs1V0ZJRXVoMk5jQzNaMnJzbFRwNERYSzZMbnFkZlY4Z29jLzlTd29aNG5kcGpqRENCN1lFQWhnKwpKbFlLamFCQUM0bXJPalBEdmRTd2p0ZjV3ejB2aDVsaUYrSDY5Ujc5YXhaSFJVVGpFNXU5QlZJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: jeopardy-nodeselector-demo-certs
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jeopardy-nodeselector
  namespace: default
  labels:
    app: jeopardy-nodeselector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jeopardy-nodeselector
  template:
    metadata:
      labels:
        app: jeopardy-nodeselector
    spec:
      serviceAccount: jeopardy-nodeselector
      containers:
        - name: server
          image: drnic/jeopardy-nodeselector:v0.3.2
          command: ["/usr/bin/jeopardy-nodeselector"]
          args:
            [
              "-host=$(HOSTNAME)",
              "-port=8443",
              "-cert-path=/certs/tls.crt",
              "-key-path=/certs/tls.key"
            ]
          env:
            - name: HOSTNAME
              value: "jeopardy-nodeselector.default.svc.cluster.local"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: server-tls-port
          resources:
            requests:
              cpu: "100m"
              memory: "128M"
            limits:
              cpu: "250m"
              memory: "256M"
          livenessProbe:
            httpGet:
              path: /
              port: server-tls-port
              scheme: HTTPS
            initialDelaySeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: server-tls-port
              scheme: HTTPS
          volumeMounts:
            - name: certs
              mountPath: "/certs"
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: jeopardy-nodeselector-demo-certs
---
apiVersion: v1
kind: Service
metadata:
  name: jeopardy-nodeselector
  namespace: default
spec:
  selector:
    app: jeopardy-nodeselector
  ports:
    - port: 443 # Service's port
      protocol: TCP
      targetPort: server-tls-port
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jeopardy-nodeselector
  namespace: default
  labels:
    app: jeopardy-nodeselector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jeopardy-nodeselector
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jeopardy-nodeselector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jeopardy-nodeselector
subjects:
- kind: ServiceAccount
  name: jeopardy-nodeselector
  namespace: default
---
apiVersion: v1
kind: Namespace
metadata:
  # Create a namespace that we'll match on
  name: multiarch-test
  labels:
    multiarch: "true"
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: jeopardy-nodeselector
webhooks:
  - name: jeopardy-nodeselector.starkandwayne.com
    sideEffects: None
    # "Equivalent" provides insurance against API version upgrades/changes - e.g.
    # extensions/v1beta1 Ingress -> networking.k8s.io/v1beta1 Ingress
    # matchPolicy: Equivalent
    rules:
      - apiGroups:
          - "*"
        apiVersions:
          - "*"
        operations:
          - "CREATE"
          - "UPDATE"
        resources:
          - "pods"
          - "deployments"
    namespaceSelector:
      matchExpressions:
        # Any Namespace with a label matching the below will have its
        # annotations validated by this admission controller
        - key: "multiarch"
          operator: In
          values: ["true"]
    failurePolicy: Fail
    clientConfig:
      service:
        # This is the hostname our certificate needs in its Subject Alternative
        # Name array - name.namespace.svc
        # If the certificate does NOT have this name, TLS validation will fail.
        name: jeopardy-nodeselector
        namespace: default
        path: "/jeopardy-nodeselector/multiarch"
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVuekNDQTRlZ0F3SUJBZ0lSQUwvQnYxZStPYzdiY0VkajR3S3lZL2t3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1qQXdNVEF6TWpFd05qTXpXaGNOTWpBd05EQXlNakV3Ck5qTXpXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBT2xKdWp4Y1ZOWlkycDdmcUVjNFhYR3RPdVhTU1VUdHdEN0FPam1CVjJvMWcycDdnT1ZECnkvUmdZZW15K0RIOXJQYmZrU3BwYWFtd2xNdVQrZDBYV2l6Q2ZlZWhDT09RSjZXdFpCenM0bXROWEdyV3M1bVMKVG1jUG5WN21nRHpKd250NENjdXZVWEVqdDduNDhjRjR0U1NZdnR1OGRjcHhFZmxVVXlEanY0VHNjbjl0R3lQMQpEZzB4SWE2U25HZjMwZDY5RWVvdGVCUnZ2bDdBZjJObkYxYndFa2NMT1M1MWFTeW9jdWF0eGxCbWlOeGFQWmZxCkViMWpMVlRyR09rRko4NnVjcEVYK2I1QlllcEVoMVA3WVNFOEN6NEY3TzBueG4rVzNEWkVHSDJBamEzekhEZlMKM2E1S09SYzRubU9kOFNSNW4wc1VzZ21CWTR4TmxjVlE5T01DQXdFQUFhT0NBWXd3Z2dHSU1CTUdBMVVkSlFRTQpNQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdnZ0ZoQmdOVkhSRUVnZ0ZZTUlJQlZJSWhhbVZ2CmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmxabUYxYkhRdWMzWmpnaTlxWlc5d1lYSmtlUzF1YjJSbGMyVnMKWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSXZhbVZ2Y0dGeVpIa3RibTlrWlhObApiR1ZqZEc5eUxtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTV6ZG1PQ0wycGxiM0JoY21SNUxXNXZaR1Z6ClpXeGxZM1J2Y2k1cVpXOXdZWEprZVMxdWIyUmxjMlZzWldOMGIzSXVjM1pqZ2tKcVpXOXdZWEprZVMxdWIyUmwKYzJWc1pXTjBiM0l1YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxYUmxjM1F1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd5Q1FtcGxiM0JoY21SNUxXNXZaR1Z6Wld4bFkzUnZjaTVxWlc5d1lYSmtlUzF1YjJSbGMyVnNaV04wCmIzSXRkR1Z6ZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJSmJHOWpZV3hvYjNOMGdna3hNamN1TUM0d0xqRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQURoY2RJNGltUkRveW5ucnZLWVJnRnRFa01YUzFvUnhRbFhSdE8yOQo3cGFVNXM2OXR1USthZkV5R25JeDE1VmVaOGg0NCtJcFV5NkYrenhIdmQ4QmNMQ0R3T0dzWEZqaEx2VkNsRmlXCnFhQm1razJJc2pMUEtQUU9FYXgwQitMUjNzZ2dCc3BwYVBkSytzWHprVnE4alhWUm0xWGIzT1Y5RGlGb2JmMEcKNE9EZzJwWnpRK0xXRnByTzNUS1ZaRUFldHdhVlZWMUJzT0tpUFBhUjNJU21NM05NbW9DRDNNWDc2VnpBZjN5WQpiTjhaRGhYMGtPZGlHanVud1ZrM1lsR2xtandna3Fwa1JYcEVrQUhwTnlXU2FBbGlZVURtdFlMSlVlQnFxbG9uCmo3UHFoajJRRzYrMk1MaUdNUHZDcGlGSFYzdFlSVGhIN05WYjdVTFNzNzVnZzQ0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
