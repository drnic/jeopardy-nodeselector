---
apiVersion: v1
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyVENDQXBXZ0F3SUJBZ0lSQUxyczlPVXp5UWVrby9aQWNNaGw0S0V3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNakkyTWpNeE9ERTBXaGNOTWpBd016STFNak14Ck9ERTBXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBSzQxVEdlVHNpc2lwZUN0bDN2bHNkTUxMTElML3dmd3AyNEMyWUlsck1BQWdJdDNDSjdxCnZNOXpSL3cxVk1VaUhkdkNmT1ZuUVhveXk2Y2lDSHBHanZ3djZBRGdCWW9WRlhDZ1NyVnNLZUdNZG9GWk03bjMKMEJGVkQzSG1SUHJMMTNlU1ljMjVYL3F1MEVRR1plOHVXUkVjT2VKRzFZa3lTM0lQeC9VcU4wdFM5NDVWaVUzRQo1TVZmTkxEcmM2Vko3VE1iYnZDNU90S25DcVNidFhTT1pBUURnUkxFN240RnJiS3ErczVWd09uTzFha1RCOXlECjdTcHY2RmZWOTlaU1JkRTFLSk1yRzRVT0c0QVBGVXU3b2xGTUtWbVNtZ2dReWNIVkJSdTVBNWdkSzNvSUQ5MWcKTkpReXIvQ3dJb2JVeCtxczM3ZHVLT0M5M3ZSWjh6RUtRdzhDQXdFQUFhT0JtekNCbURBVEJnTlZIU1VFRERBSwpCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNJV3BsYjNCaGNtUjVMVzV2ClpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZNEl2YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNDV3h2WTJGc2FHOXpkSUlKTVRJM0xqQXVNQzR4TUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkpzcG81M3Ewam1meW0rMTlvMC9jSFphS2dGdXgyQXg2QWNramZKbFYwCi9ZMHR2VXRHVGhrRFl6QjRPSExkL2xWREZhQWNqQkpWT24wcllKVUNTODhEUmFuWmtIYXVuMWwyZm5LZjRlZ1cKZjY4ampSZWdNYndabUt4K3hta1pxSGI0NDR2VHpyUFFpSXArU3BRdDRra1dVaVFUOENBNkkxRCt6VEpqSjFBSApBbkZkY0Z5eFoyQnFMamdNSVl2a0dDK2VFaU81bW5KcVJJeVFTNzVkcGJ4bkY0UU1obTF1OFpoQmR1dndaOG1hCnlNcU1abm9SNnlpL09MMDQ3bVJkWWRITUZNK0lZQnFmVm14TkRJMU1KeE9TOUxRTmt4cEZOQm41OU9Lb3NHMCsKQ1JjbFQ1ak9sOFN0R1h5QWRwZmxidWpxYUNuVlFJZ1FIZVhBaVI4K05XTXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyVENDQXBXZ0F3SUJBZ0lSQUxyczlPVXp5UWVrby9aQWNNaGw0S0V3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNakkyTWpNeE9ERTBXaGNOTWpBd016STFNak14Ck9ERTBXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBSzQxVEdlVHNpc2lwZUN0bDN2bHNkTUxMTElML3dmd3AyNEMyWUlsck1BQWdJdDNDSjdxCnZNOXpSL3cxVk1VaUhkdkNmT1ZuUVhveXk2Y2lDSHBHanZ3djZBRGdCWW9WRlhDZ1NyVnNLZUdNZG9GWk03bjMKMEJGVkQzSG1SUHJMMTNlU1ljMjVYL3F1MEVRR1plOHVXUkVjT2VKRzFZa3lTM0lQeC9VcU4wdFM5NDVWaVUzRQo1TVZmTkxEcmM2Vko3VE1iYnZDNU90S25DcVNidFhTT1pBUURnUkxFN240RnJiS3ErczVWd09uTzFha1RCOXlECjdTcHY2RmZWOTlaU1JkRTFLSk1yRzRVT0c0QVBGVXU3b2xGTUtWbVNtZ2dReWNIVkJSdTVBNWdkSzNvSUQ5MWcKTkpReXIvQ3dJb2JVeCtxczM3ZHVLT0M5M3ZSWjh6RUtRdzhDQXdFQUFhT0JtekNCbURBVEJnTlZIU1VFRERBSwpCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNJV3BsYjNCaGNtUjVMVzV2ClpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZNEl2YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNDV3h2WTJGc2FHOXpkSUlKTVRJM0xqQXVNQzR4TUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkpzcG81M3Ewam1meW0rMTlvMC9jSFphS2dGdXgyQXg2QWNramZKbFYwCi9ZMHR2VXRHVGhrRFl6QjRPSExkL2xWREZhQWNqQkpWT24wcllKVUNTODhEUmFuWmtIYXVuMWwyZm5LZjRlZ1cKZjY4ampSZWdNYndabUt4K3hta1pxSGI0NDR2VHpyUFFpSXArU3BRdDRra1dVaVFUOENBNkkxRCt6VEpqSjFBSApBbkZkY0Z5eFoyQnFMamdNSVl2a0dDK2VFaU81bW5KcVJJeVFTNzVkcGJ4bkY0UU1obTF1OFpoQmR1dndaOG1hCnlNcU1abm9SNnlpL09MMDQ3bVJkWWRITUZNK0lZQnFmVm14TkRJMU1KeE9TOUxRTmt4cEZOQm41OU9Lb3NHMCsKQ1JjbFQ1ak9sOFN0R1h5QWRwZmxidWpxYUNuVlFJZ1FIZVhBaVI4K05XTXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcmpWTVo1T3lLeUtsNEsyWGUrV3gwd3Nzc2d2L0IvQ25iZ0xaZ2lXc3dBQ0FpM2NJCm51cTh6M05IL0RWVXhTSWQyOEo4NVdkQmVqTExweUlJZWthTy9DL29BT0FGaWhVVmNLQkt0V3dwNFl4MmdWa3oKdWZmUUVWVVBjZVpFK3N2WGQ1Smh6YmxmK3E3UVJBWmw3eTVaRVJ3NTRrYlZpVEpMY2cvSDlTbzNTMUwzamxXSgpUY1RreFY4MHNPdHpwVW50TXh0dThMazYwcWNLcEp1MWRJNWtCQU9CRXNUdWZnV3RzcXI2emxYQTZjN1ZxUk1ICjNJUHRLbS9vVjlYMzFsSkYwVFVva3lzYmhRNGJnQThWUzd1aVVVd3BXWkthQ0JESndkVUZHN2tEbUIwcmVnZ1AKM1dBMGxES3Y4TEFpaHRUSDZxemZ0MjRvNEwzZTlGbnpNUXBERHdJREFRQUJBb0lCQUdDaWpDbUFrbnEvRTRqWQpnb2xsMXdpYzBFUkx4MEtlU2lJS1RxR1ZTSWlSUHIwZVlKZlcycm13MXlPZWFkR1lwVHQ4WFUvYndVU0ozTkp2ClhJaUhqMVZ4Tlo4V3BidjlDaEdadVJkK1VwVWRGN2VVeGM3SkdwQWl3UmlMaFlRaGd2cC9KdVc1aVBaRDlwOWwKZFRJQ1ljSE9DSVh1aVJFNzV3SDBveFRxUUJYMW14b1o4NEF6T2JDZjcrWi85OEFPeVZxaEpYcmxDMlNQOHFXTwplaklLSEZyTG9TajlOQ25VTmVxcEZ6Y2NGUWdmVVRSa3p5eWRSUFZJSWVOQkJWNHpaL3dxaEQyV1ZIbWxkTE53ClhwM05seXp2QlJnK1krUlZnV3AwbXRHb3lSdXBvMlRjcjV4NWg3MUs2TXE1WWx1WlR3ME9yUDQ5WmhVQmQ1MmUKbUd1SjhDRUNnWUVBeEhiQVp2N1AyMEx5bk0xdE5jQldxNzE2OW1wMDNibjlEczg4ZmtqSngwM3U4TlBSME56MApoM3Vpam5oRVh4ZnRlY1Nzb1U5TjNZT3BJbElxR0tnVTRVUU1MZy9UUnV2SXNvL3BwTlh6cXdzVVFUajQwWVVjCk50VDBOaG15NHJpdzdFN2sybDVrYnh3bDBNY0hKMWJJQ2oyb3lFamFGQ1ppSFltWFA0Y3RsaWNDZ1lFQTR2Ly8KdkpFRTAyYWNoOWdkU2FBN1hsbHRmS2FWNUhHYmYwUXdYRldVbVJJK2o3d0o3L1ppTS9SZUZOR0g1VTNiWU11Ywp6eUNidjZxRDJuMTVyRW1aVzdXM3Vuazl0R2RKMkFZMU9nMnNOczFraGhoOSt5TXdzdnJyWS85ekMrMVZFbEtICmQ3emIvemgxS1VLRVFkMzFRajVSM0k0MUxybERXQk8vOE8xRHBOa0NnWUJEblVjTWEyZm40enVTUVpUemFkV3EKVjVUcEY2eE8zd0s3eFJEaHVYVlFWWDhGZlRENXZBR2dXeW1QOU00N0dBWVA0V00wUlJIY1NjSzg0Q0JDeWg0ZApoUWpZRlhRMk5WR21PcWREcHFxczFDeE5ZaWtvR3JLaUlGcElBRUl6aXpMQXNVcEw2UzZSbXROYzdoS0ZOSFcyCktKQmRGYzJRSDhHbXZzTENCMmptQXdLQmdDZTMyVHhhTjNqeHpGT3NpYnRYTU93YVE2RDYyT0ZHeTRsaUdnQWQKN1VrM093RVZTcnZVNVd2bnh3cG5leHF4RzhCOC8rdng3YTZFbkZ0L2R1bWhXeGNEM2FqZ0M5N2o3N1MvcVZLRwpEK3JxMXpyclVDZkFDWVpYaHhaUkhRVXFPcWRoRDFqeEQ2RkJkS2FLZisreWNYWnN4eEFMUmR6dUI0MkNyeVB0CnI5ZEpBb0dBZUZVWVd3L05tV1NNaURQbDVNdGFXRUtXS0VtT3RjZGI0UjY2KzFXa2FreVFJbC9xUmdUTkRZcTkKRERvbE9acTF3KzREalBnNXVBMzV0c2c4aFhFMFVMWUZEcE1ZcmpHbTRJYm9zbVVEQzFMVFlLK2EyWjJYYzEyYgo1d0JZaVdrdndpMFM2S1hKeWRxbmZHaEoyQnJzOUltZHF4ajN2TlBYU25aWDlTT2lCd1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: jeopardy-nodeselector-demo-certs
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jeopardy-nodeselector
  labels:
    app: jeopardy-nodeselector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jeopardy-nodeselector
  template:
    metadata:
      labels:
        app: jeopardy-nodeselector
    spec:
      serviceAccount: jeopardy-nodeselector
      containers:
        - name: server
          image: drnic/jeopardy-nodeselector:v0.3.0
          command: ["/usr/bin/jeopardy-nodeselector"]
          args:
            [
              "-host=$(HOSTNAME)",
              "-port=8443",
              "-cert-path=/certs/tls.crt",
              "-key-path=/certs/tls.key"
            ]
          env:
            - name: HOSTNAME
              value: "jeopardy-nodeselector.default.svc.cluster.local"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: server-tls-port
          resources:
            requests:
              cpu: "100m"
              memory: "128M"
            limits:
              cpu: "250m"
              memory: "256M"
          livenessProbe:
            httpGet:
              path: /
              port: server-tls-port
              scheme: HTTPS
            initialDelaySeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: server-tls-port
              scheme: HTTPS
          volumeMounts:
            - name: certs
              mountPath: "/certs"
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: jeopardy-nodeselector-demo-certs
---
apiVersion: v1
kind: Service
metadata:
  name: jeopardy-nodeselector
spec:
  selector:
    app: jeopardy-nodeselector
  ports:
    - port: 443 # Service's port
      protocol: TCP
      targetPort: server-tls-port
---
apiVersion: v1
kind: Namespace
metadata:
  # Create a namespace that we'll match on
  name: multiarch-test
  labels:
    multiarch: "true"
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: jeopardy-nodeselector
webhooks:
  - name: jeopardy-nodeselector.starkandwayne.com
    sideEffects: None
    # "Equivalent" provides insurance against API version upgrades/changes - e.g.
    # extensions/v1beta1 Ingress -> networking.k8s.io/v1beta1 Ingress
    # matchPolicy: Equivalent
    rules:
      - apiGroups:
          - "*"
        apiVersions:
          - "*"
        operations:
          - "CREATE"
          - "UPDATE"
        resources:
          - "pods"
          - "deployments"
    namespaceSelector:
      matchExpressions:
        # Any Namespace with a label matching the below will have its
        # annotations validated by this admission controller
        - key: "multiarch"
          operator: In
          values: ["true"]
    failurePolicy: Fail
    clientConfig:
      service:
        # This is the hostname our certificate needs in its Subject Alternative
        # Name array - name.namespace.svc
        # If the certificate does NOT have this name, TLS validation will fail.
        name: jeopardy-nodeselector
        namespace: default
        path: "/jeopardy-nodeselector/multiarch"
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyVENDQXBXZ0F3SUJBZ0lSQUxyczlPVXp5UWVrby9aQWNNaGw0S0V3RFFZSktvWklodmNOQVFFTEJRQXcKUXpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNU293S0FZRFZRUURFeUZxWlc5d1lYSmtlUzF1YjJSbApjMlZzWldOMGIzSXVaR1ZtWVhWc2RDNXpkbU13SGhjTk1Ua3hNakkyTWpNeE9ERTBXaGNOTWpBd016STFNak14Ck9ERTBXakJETVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXhLakFvQmdOVkJBTVRJV3BsYjNCaGNtUjUKTFc1dlpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUApBRENDQVFvQ2dnRUJBSzQxVEdlVHNpc2lwZUN0bDN2bHNkTUxMTElML3dmd3AyNEMyWUlsck1BQWdJdDNDSjdxCnZNOXpSL3cxVk1VaUhkdkNmT1ZuUVhveXk2Y2lDSHBHanZ3djZBRGdCWW9WRlhDZ1NyVnNLZUdNZG9GWk03bjMKMEJGVkQzSG1SUHJMMTNlU1ljMjVYL3F1MEVRR1plOHVXUkVjT2VKRzFZa3lTM0lQeC9VcU4wdFM5NDVWaVUzRQo1TVZmTkxEcmM2Vko3VE1iYnZDNU90S25DcVNidFhTT1pBUURnUkxFN240RnJiS3ErczVWd09uTzFha1RCOXlECjdTcHY2RmZWOTlaU1JkRTFLSk1yRzRVT0c0QVBGVXU3b2xGTUtWbVNtZ2dReWNIVkJSdTVBNWdkSzNvSUQ5MWcKTkpReXIvQ3dJb2JVeCtxczM3ZHVLT0M5M3ZSWjh6RUtRdzhDQXdFQUFhT0JtekNCbURBVEJnTlZIU1VFRERBSwpCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNJV3BsYjNCaGNtUjVMVzV2ClpHVnpaV3hsWTNSdmNpNWtaV1poZFd4MExuTjJZNEl2YW1WdmNHRnlaSGt0Ym05a1pYTmxiR1ZqZEc5eUxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNDV3h2WTJGc2FHOXpkSUlKTVRJM0xqQXVNQzR4TUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkpzcG81M3Ewam1meW0rMTlvMC9jSFphS2dGdXgyQXg2QWNramZKbFYwCi9ZMHR2VXRHVGhrRFl6QjRPSExkL2xWREZhQWNqQkpWT24wcllKVUNTODhEUmFuWmtIYXVuMWwyZm5LZjRlZ1cKZjY4ampSZWdNYndabUt4K3hta1pxSGI0NDR2VHpyUFFpSXArU3BRdDRra1dVaVFUOENBNkkxRCt6VEpqSjFBSApBbkZkY0Z5eFoyQnFMamdNSVl2a0dDK2VFaU81bW5KcVJJeVFTNzVkcGJ4bkY0UU1obTF1OFpoQmR1dndaOG1hCnlNcU1abm9SNnlpL09MMDQ3bVJkWWRITUZNK0lZQnFmVm14TkRJMU1KeE9TOUxRTmt4cEZOQm41OU9Lb3NHMCsKQ1JjbFQ1ak9sOFN0R1h5QWRwZmxidWpxYUNuVlFJZ1FIZVhBaVI4K05XTXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jeopardy-nodeselector
  namespace: default
  labels:
    app: jeopardy-nodeselector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jeopardy-nodeselector
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jeopardy-nodeselector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jeopardy-nodeselector
subjects:
- kind: ServiceAccount
  name: jeopardy-nodeselector
  namespace: default
