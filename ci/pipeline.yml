---
#
# ci/pipeline.yml
#
# Pipeline structure file for a Docker Image pipeline
#
# DO NOT MAKE CHANGES TO THIS FILE.  Instead, modify
# ci/settings.yml and override what needs overridden.
# This uses spruce, so you have some options there.
#
# author:  James Hunt <james@niftylogic.com>
#          Dennis Bell <dennis.j.bell@gmail.com>
# created: 2016-03-04

meta:
  name:     (( param "Please name your pipeline" ))
  release:  (( grab meta.name ))
  target:   (( param "Please identify the name of the target Concourse CI" ))
  url:      (( param "Please specify the full url of the target Concourse CI" ))
  pipeline: (( grab meta.name ))
  image:
    name: starkandwayne/concourse
    tag: latest

  docker:
    dockerfile: "Dockerfile"

  git:
    email:  (( param "Please provide the git email for automated commits" ))
    name:   (( param "Please provide the git name for automated commits" ))

  aws:
    bucket:     (( concat meta.name "-pipeline" ))
    region_name: us-east-1
    access_key: (( param "Please set your AWS Access Key ID" ))
    secret_key: (( param "Please set your AWS Secret Key ID" ))

  github:
    uri:          (( concat "git@github.com:" meta.github.owner "/" meta.github.repo ))
    owner:        (( param "Please specify the name of the user / organization that owns the Github repository" ))
    repo:         (( param "Please specify the name of the Github repository" ))
    branch:       master
    private_key:  (( param "Please generate an SSH Deployment Key for this repo and specify it here" ))
    access_token: (( param "Please generate a Personal Access Token and specify it here" ))

  dockerhub:
    email:      (( param "Please specify the email address for your Dockerhub account" ))
    username:   (( param "Please specify the username for your Dockerhub account" ))
    password:   (( param "Please specify the password for your Dockerhub account" ))
    repository: (( param "Please specify the name of the image (repo/name) that you are building" ))

groups:
  - name: (( grab meta.name ))
    jobs:
      - build-latest

jobs:
  - name: build-latest
    public: true
    serial: true
    plan:
    - get: git
      trigger: true
    - in_parallel:
        fail_fast: true
        steps:
        - put: amd64
          params:
            build:      "git"
            cache:      true
            dockerfile: (( concat "git/" meta.docker.dockerfile ))
        - put: arm64
          params:
            build_args:
              GOARCH: "arm64"
            build:      "git"
            cache:      true
            dockerfile: (( concat "git/" meta.docker.dockerfile ))
        - put: armhf
          params:
            build_args:
              GOARCH: "arm"
              GOARM:  "7"
            build:      "git"
            cache:      true
            dockerfile: (( concat "git/" meta.docker.dockerfile ))
    - task: tag-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: (( grab meta.image.name ))
            tag:        (( grab meta.image.tag ))
        outputs: [{name: tags}]
        run:
          path: sh
          args:
          - -ce
          - |
            echo "latest" > tags/version
            echo "latest-amd64" > tags/amd64
            echo "latest-arm64" > tags/arm64
            echo "latest-armhf" > tags/armhf

    - put: latest
      params:
        tag_file: tags/version
        manifests:
        - arch: amd64
          os: linux
          tag_file: tags/amd64
        - arch: arm64
          os: linux
          tag_file: tags/arm64
        - arch: arm
          os: linux
          tag_file: tags/armhf

resource_types:
- name: docker-manifest
  type: docker-image
  source:
    repository: mbialon/concourse-docker-manifest-resource
resources:
  - name: git
    type: git
    source:
      uri:         (( grab meta.github.uri ))
      branch:      (( grab meta.github.branch ))
      private_key: (( grab meta.github.private_key ))

  - name: amd64
    type: docker-image
    source:
      .: (( inject meta.dockerhub ))
      tag: latest-amd64

  - name: arm64
    type: docker-image
    source:
      .: (( inject meta.dockerhub ))
      tag: latest-arm64

  - name: armhf
    type: docker-image
    source:
      .: (( inject meta.dockerhub ))
      tag: latest-armhf

  - name: latest
    type: docker-manifest
    source:
      .: (( inject meta.dockerhub ))
      tag: latest
